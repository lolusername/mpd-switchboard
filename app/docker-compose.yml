version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - path.repo=/usr/share/elasticsearch/snapshots
      - cluster.routing.allocation.disk.threshold_enabled=false
      - "bootstrap.memory_lock=false"
      - cluster.routing.allocation.disk.watermark.low=95%
      - cluster.routing.allocation.disk.watermark.high=98%
      - cluster.routing.allocation.disk.watermark.flood_stage=99%
      - "ES_HEAP_SIZE=256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    expose:
      - "9200"
    volumes:
      - switchboard_data:/usr/share/elasticsearch/data
      - ./snapshots:/usr/share/elasticsearch/snapshots
    networks:
      - switchboard_default
    restart: unless-stopped

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: switchboard_api
    expose:
      - "8000"
    volumes:
      - ../data:/app/pdf_data
      - ./api:/app
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - SECRET_KEY=${SECRET_KEY:-development_secret_key}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - PDF_DIRECTORY=/app/pdf_data
      - PYTHONPATH=/app
    depends_on:
      - elasticsearch
    networks:
      - switchboard_default
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: switchboard_frontend
    expose:
      - "3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NUXT_PUBLIC_API_BASE=${NUXT_PUBLIC_API_BASE:-http://localhost/api}
    depends_on:
      - api
    networks:
      - switchboard_default

  nginx:
    image: nginx:alpine
    container_name: switchboard_nginx
    ports:
      - "80:80"
      - "${SSL_PORT:-443}:443"
    volumes:
      - ./nginx/switchboard.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    depends_on:
      - frontend
      - api
    networks:
      - switchboard_default

volumes:
  switchboard_data:

networks:
  switchboard_default:
    driver: bridge

